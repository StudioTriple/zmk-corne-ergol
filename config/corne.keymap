/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&mo 3>;
            key-positions = <39>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <21 39 40 41 30 31 32 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 11 23 35>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESCAPE  &mt RS(NUMBER_1) Q  &mt NUMBER_2 W       &mt NUMBER_3 E        &mt NUMBER_4 R   &mt N5 T           &mt NUMBER_6 Y       &mt N7 U                     &mt N8 I          &kp O                 &mt N0 P               &kp BSPC
&kp TAB     &hml LEFT_SHIFT A   &hml LEFT_CONTROL S  &hml LEFT_ALT D       &hml LEFT_GUI F  &kp G              &kp H                &hmr RIGHT_GUI J             &hmr RIGHT_ALT K  &hmr RIGHT_CONTROL L  &hmr RIGHT_SHIFT SEMI  &kp ENTER
&kp ENTER   &kp Z               &kp X                &kp C                 &kp V            &kp B              &kp N                &kp M                        &kp COMMA         &kp DOT               &kp FSLH               &mt RIGHT_SHIFT CAPSLOCK
                                                     &mt LEFT_COMMAND TAB  &kp SPACE        &lt 1 BACKSPACE    &mt RIGHT_ALT ENTER  &mt RS(RA(RIGHT_GUI)) SPACE  &kp RIGHT_ALT
            >;
        };

        Nav {
            bindings = <
&kp LS(LA(LC(LG(NUMBER_3))))  &kp TAB                 &kp HOME      &kp UP_ARROW  &kp END       &kp PAGE_UP      &kp KP_SLASH  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp COLON        &kp C_PREVIOUS
&kp LS(LC(LG(LA(NUMBER_4))))  &kp LS(TAB)             &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN    &kp KP_MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp C_PLAY_PAUSE
&kp LS(LA(LC(LG(NUMBER_2))))  &kp LA(LC(LG(LS(N5))))  &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  &kp DEL          &kp KP_COMMA  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp C_NEXT
                                                                    &trans        &trans        &trans           &trans        &trans           &trans
            >;
        };

        /*Sym {
            bindings = <
&kp LG(AT_SIGN)  &kp CARET       &kp LESS_THAN         &kp GREATER_THAN       &kp DLLR         &kp PRCNT    &kp AT_SIGN    &kp AMPS         &kp ASTRK      &kp SQT    &kp GRAVE          &trans
&trans           &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL    &kp BACKSLASH  &kp KP_PLUS      &kp MINUS      &kp SLASH  &kp DOUBLE_QUOTES  &trans
&trans           &kp TILDE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE   &kp HASH     &kp PIPE       &kp EXCLAMATION  &kp SEMICOLON  &kp COLON  &kp KP_DOT         &trans
                                                       &trans                 &trans           &trans       &trans         &trans           &trans
            >;
        };*/

        Settings {
            bindings = <
&none       &none         &none         &none         &none         &none           &ext_power EP_TOG  &sys_reset  &bootloader  &none            &none            &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bl BL_TOG         &bl BL_INC  &bl BL_DEC   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
&none       &none         &none         &none         &none         &none           &none              &none       &none        &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none
                                        &none         &none         &none           &none              &none       &none
            >;
        };
    };
};
